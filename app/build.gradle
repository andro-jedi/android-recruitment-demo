plugins {
    id("com.toptal.app.android")
    alias(libs.plugins.hilt.android)
    alias(libs.plugins.google.ksp)
}

android {
    defaultConfig {
        namespace "com.toptal.github.browser"
        applicationId "com.toptal.browser"
        versionCode = 1
        versionName "1.0"

        buildConfigField "String", "GITHUB_TOKEN", "\"${findGithubToken()}\""
        buildConfigField "String", "GITHUB_API", "\"https://api.github.com/graphql\""
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        named("debug") {
            signingConfig signingConfigs.debug
        }
        named('release') {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lint {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation(projects.data.networking.impl)
    implementation(projects.presentation.impl)
    implementation(projects.domain)
    implementation(projects.data.repository)

    implementation(libs.hilt.android)
    implementation(libs.hilt.navigation.compose)
    ksp(libs.androidx.hilt.compiler)
    ksp(libs.hilt.compiler)

    testImplementation(libs.hilt.android.test)
    kspTest(libs.hilt.compiler)
}

private String findGithubToken() {
    if (hasProperty('github.token')) {
        return getProperty("github.token")
    }

    def env = System.getenv('github_token') ?: System.getenv("GITHUB_TOKEN")
    if (env != null) {
        return env
    }

    def localProperties = rootProject.file('local.properties')
    if (localProperties.exists()) {
        Properties properties = new Properties()
        properties.load(rootProject.file('local.properties').newDataInputStream())

        def token = properties.getProperty('github.token')
        if (token != null) {
            return token
        }
    }

    logger.error("Could not find github api token. " +
            "Set a `github_token` environment variable, " +
            "pass it as a project property `./gradlew -Pgithub.token=\"TOKEN\"` " +
            "or add `github.token` entry to your `local.properties` file")

    return null
}
